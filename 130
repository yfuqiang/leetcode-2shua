class Solution {
public:
    int x[4]={-1,1,0,0};
    int y[4]={0,0,-1,1};
    void solve(vector<vector<char>>& board) {
        int i,j;
        if(board.size()==0)
        return;
        for(i=0;i<board.size();i++)
        {
            if(board[i][0]=='O')
            dfs(board,i,0);
        }
        for(i=0;i<board.size();i++)
        {
            if(board[i][board[0].size()-1]=='O')
            dfs(board,i,board[0].size()-1);
        }
        for(j=0;j<board[0].size();j++)
        {
            if(board[0][j]=='O')
            dfs(board,0,j);
        }
        for(j=0;j<board[0].size();j++)
        {
            if(board[board.size()-1][j]=='O')
            dfs(board,board.size()-1,j);
        }
        for(i=0;i<board.size();i++)
        {
            for(j=0;j<board[0].size();j++)
            {
                if(board[i][j]=='1')
                board[i][j]='O';
                else
                board[i][j]='X';
            }
        }
    }

    void dfs(vector<vector<char>> &board,int row ,int col)
    {
        if((row<0)||(row>=board.size())||(col<0)||(col>=board[0].size()))
        return;
        if(board[row][col]=='O')
        {
            board[row][col]='1';
            for(int i=0;i<4;i++)
            {
                dfs(board,row+x[i],col+y[i]);
            }
        }
        return;

            /*if(i>=0&&i<board.size()&&j>=0&&j<board[0].size()&&board[i][j]=='O'){
            board[i][j]='1';
            dfs(board,i-1,j);
            dfs(board,i+1,j);
            dfs(board,i,j-1);
            dfs(board,i,j+1);}*/
        

        
    }
};
