/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int m, int n) {
        ListNode *f=new ListNode(0);
        f->next=head;
        ListNode* pre=f;
        ListNode* cur=head;
        int count=1;
        ListNode* tail=head;
        while(count<n)
        {
            tail=tail->next;
            count++;
        }
        ListNode* u=tail->next;
        count=1;
        while(count<m)
        {
            cur=cur->next;
            pre=pre->next;
            count++;
        }
        while(count<n)
        {
            pre->next=cur->next;
            tail->next=cur;
            cur->next=u;
            u=cur;
            cur=pre->next;
            count++;
        }
        return f->next;
    }
};
