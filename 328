/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL)
        return NULL;
        if(head->next==NULL)
        return head;
        ListNode* pre1=head;
        ListNode* h1=pre1;
        ListNode* pre2=head->next;
        ListNode* h2=pre2;
        head=head->next->next;
        int count=3;
        while(head!=NULL)
        {
            if(count%2==1)
            {pre1->next=head;
            pre1=head;
            }
            else
            {
                pre2->next=head;
                pre2=head;
            }
            head=head->next;
            count++;
        }
        pre1->next=h2;
        pre2->next=NULL;
        return h1;


    }
};
