class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size(),n=nums2.size();
        int maxleft=INT_MIN,minright=INT_MAX;
        if(m>n)
        return findMedianSortedArrays(nums2,nums1);//保证算法复杂度
        int half=(m+n+1)/2;
        int i,j;
        int imin=0,imax=nums1.size();
        while(imin<=imax)
        {
            i=(imin+imax)/2;
            j=half-i;
            if(i>imin&&nums1[i-1]>nums2[j])
            {
                imax=i-1;
            }
            else if(i<imax&&nums1[i]<nums2[j-1])
            {
                imin=i+1;
            }
            else
            {
                if(i==0) maxleft=nums2[j-1];
                else if(j==0) maxleft=nums1[i-1];
                else
                {
                    maxleft=max(nums1[i-1],nums2[j-1]);
                }
                if((m+n)%2==1)
                {
                    return maxleft;
                }

                if(i==m) minright=nums2[j];
                else if(j==n) minright=nums1[i];
                else
                {
                    minright=min(nums1[i],nums2[j]);
                }
                return (maxleft+minright)/2.0;
            }
        }
        return 0.0;
    }
};
