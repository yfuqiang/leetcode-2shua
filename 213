class Solution {
public:
    int rob(vector<int>& nums) {
        vector<int> dp(nums.size());
        if(nums.size()==0)
        return 0;
        if(nums.size()==1)
        return nums[0];
        if(nums.size()==2)
        return max(nums[0],nums[1]);
        if(nums.size()==3)
        {
            return max(nums[0],max(nums[1],nums[2]));
        }
        dp[0]=nums[0];
        dp[1]=max(nums[0],nums[1]);
        int i;
        for(i=2;i<nums.size();i++)
        {
            if(i==nums.size()-1)
            dp[i]=dp[i-1];
            else
            {
                dp[i]=max(dp[i-2]+nums[i],dp[i-1]);
            }
        }
        int m=dp[nums.size()-1];
        dp[1]=nums[1];
        dp[2]=max(nums[1],nums[2]);
        for(i=3;i<nums.size();i++)
        {
            dp[i]=max(dp[i-2]+nums[i],dp[i-1]);
        }
        m=max(dp[nums.size()-1],m);
        return m;
    }
};
