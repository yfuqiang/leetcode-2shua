class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<int> nums(n);
        for(int i=0;i<nums.size();i++)
        {
            nums[i]=i+1;
        }
        dfs(nums,k,{},0);
        return res;
    }
    void dfs(vector<int>& nums,int k,vector<int> temp,int begin)
    {
        if(temp.size()==k)
        {
            res.push_back(temp);
            return;
        }
        if(nums.size()-begin+1+temp.size()<k)
        return;
        int i;
        for(i=begin;i<nums.size();i++)
        {
            temp.push_back(nums[i]);
            dfs(nums,k,temp,i+1);
            temp.pop_back();
        }
        return;
    }
    vector<vector<int>> res;

};
