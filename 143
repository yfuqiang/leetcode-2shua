/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(head==NULL||head->next==NULL)
        return;
        ListNode* dummy=new ListNode(0);
        ListNode* a=head;
        ListNode* aa=head;
        
        dummy->next=NULL;
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast&&fast->next)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* w= slow->next;
        slow->next=NULL;
        while(w)
        {
            ListNode* u=w->next;
            ListNode* p=dummy->next;
            dummy->next=w;
            w->next=p;
            w=u;

        }

        ListNode* h=dummy->next;
        while(h)
        {
            ListNode* u=h->next;
            ListNode* back= a->next;
            a->next=h;
            h->next=back;
            a=a->next->next;
            h=u;
        }
        head=aa;
    }
};
