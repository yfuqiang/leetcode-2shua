class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int i,j;
        int m=0;
        if(matrix.size()==0)
        return 0;
        vector<vector<int>> dp(matrix.size(),vector<int>(matrix[0].size()));
        for(i=0;i<matrix.size();i++)
        {
            dp[i][0]=matrix[i][0]=='0'?0:1;
            if(dp[i][0]>m)
            m=dp[i][0];
        }
        for(j=0;j<matrix[0].size();j++)
        {
            dp[0][j]=matrix[0][j]=='0'?0:1;
            if(dp[0][j]>m)
            m=dp[0][j];
        }
        for(i=1;i<matrix.size();i++)
        {
            for(j=1;j<matrix[0].size();j++)
            {
                if(matrix[i][j]=='0')
                {
                    dp[i][j]=0;
                    continue;
                }
                int len=dp[i-1][j-1];
                len=sqrt(len);
                int l,count=1;
                for(l=1;l<=len;l++)
                {
                    if((matrix[i-l][j]==matrix[i][j-l])&&(matrix[i-l][j]=='1'))
                    count++;
                    else
                    break;
                }
                dp[i][j]=count*count;
                if(dp[i][j]>m)
                m=dp[i][j];
            }
        }
        return m;
    }
};
