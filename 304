class NumMatrix {
public:
    NumMatrix(vector<vector<int>>& matrix) {
        if(matrix.size()==0)
        return ;
        int i,j;
        dp=matrix;
        for(i=1;i<matrix.size();i++)
        {
            dp[i][0]=dp[i-1][0]+matrix[i][0];
        }
        for(j=1;j<matrix[0].size();j++)
        {
            dp[0][j]=dp[0][j-1]+matrix[0][j];
        }
        for(i=1;i<matrix.size();i++)
        {
            for(j=1;j<matrix[0].size();j++)
            {
                dp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]+matrix[i][j];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int res=dp[row2][col2];
        if(row1>0)
        {
            res-=dp[row1-1][col2];
        }
        if(col1>0)
        {
            res-=dp[row2][col1-1];
        }
        if(row1>0&&col1>0)
        {
            res+=dp[row1-1][col1-1];
        }
        return res;
    }
    vector<vector<int>> dp;
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
