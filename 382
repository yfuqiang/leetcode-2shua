/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head) {
        this->head1=head;
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        ListNode* head=head1;
        int i=2;
        ListNode* res=head;
        if(head==NULL)
        return 0;
        if(head->next==NULL)
        return head->val;
        head=head->next;
        while(head!=NULL)
        {
           
            if(rand()%i==0)
            {
                res=head;
            }
             head=head->next;
            i++;
        }
        return res->val;
    }
    ListNode* head1;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */
