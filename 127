class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        queue<pair<string,int>> q;
        unordered_set<string> e;
        for(auto c:wordList)
        e.insert(c);
        q.push({beginWord,1});
        while(q.empty()!=1)
        {
            if(q.front().first==endWord)
            return (q.front().second);
            string temp=q.front().first;
            int step=q.front().second;
            q.pop();
            for(int i=0;i<temp.size();i++)
            {
                string k=temp;
                for(int j='a';j<='z';j++)
                {
                    if(j==temp[i])
                    continue;
                    temp[i]=j;
                    if(e.find(temp)!=e.end())
                    {
                        q.push({temp,step+1});
                        e.erase(temp);
                    }
                    temp=k;
                }
                
            }
            
        }
        return 0;
    }
};
