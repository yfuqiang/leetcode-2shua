/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1=0,l2=0;
        ListNode* a=headA;
        ListNode* b=headB;
        while(a)
        {
            l1++;
            a=a->next;
        }
        while(b)
        {
            l2++;
            b=b->next;
        }
        if(l1>l2)
        {
            int count=l1-l2;
            while(count>0)
            {
                ListNode* dummy=new ListNode(0);
                dummy->next=headB;
                headB=dummy;
                count--;
            }
        }
        else if(l1<l2)
        {
            int count=l2-l1;
            while(count>0)
            {
                ListNode* dummy=new ListNode(0);
                dummy->next=headA;
                headA=dummy;
                count--;
            }
        }
        while(headA)
        {
            if(headA!=headB)
            {
                headA=headA->next;
                headB=headB->next;
            }
            else
            return headA;
        }
        return NULL;

    }
};
