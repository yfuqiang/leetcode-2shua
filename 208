class Trie {
public:
    /** Initialize your data structure here. */
    Trie() :next(26,NULL){
        isfinal=false;
    }
    
    /** Inserts a word into the trie. */
    void insert(string word) {
        int i;
        Trie* p=this;
        for(i=0;i<word.size();i++)
        {
            if(p->next[word[i]-'a']==NULL)
            {
                p->next[word[i]-'a']=new Trie();
            }
            p=p->next[word[i]-'a'];
        }
        p->isfinal=true;
    }
    
    /** Returns if the word is in the trie. */
    bool search(string word) {
        int i;
        Trie *p=this;
        for(i=0;i<word.size();i++)
        {
            if(p->next[word[i]-'a']!=NULL)
            {
                p=p->next[word[i]-'a'];

            }
            else
            return false;
        }
        if(p->isfinal==true)
        return true;
        else
        return false;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    bool startsWith(string prefix) {
        int i;
        Trie *p=this;
        for(i=0;i<prefix.size();i++)
        {
            if(p->next[prefix[i]-'a']!=NULL)
            {
                p=p->next[prefix[i]-'a'];

            }
            else
            return false;
        }
        
        return true;
        
    }
   
    vector<Trie*> next;
    bool isfinal;
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
