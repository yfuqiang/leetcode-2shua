/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* f=new ListNode(0);
        ListNode* pre=f;
        int carry=0;
        while(l1!=NULL&&l2!=NULL)
        {
            ListNode* node=new ListNode(0);
            node->val=l1->val+l2->val+carry;
            carry=0;
            if(node->val>=10)
            {
                carry=1;
                node->val=(node->val)%10;
            }
            pre->next=node;
            pre=node;
            l1=l1->next;
            l2=l2->next;

        }
        if(l1==NULL)
        {
            while(l2!=NULL)
            {
                ListNode* node=new ListNode(0);
                node->val=l2->val+carry;
                carry=0;
                if(node->val>=10)
                {
                    carry=1;
                    node->val=(node->val)%10;
                }
                pre->next=node;
                pre=node;
              
            l2=l2->next;
            }
        }
        else if(l2==NULL)
        {
            while(l1!=NULL)
            {
                ListNode* node=new ListNode(0);
                node->val=l1->val+carry;
                carry=0;
                if(node->val>=10)
                {
                    carry=1;
                    node->val=(node->val)%10;
                }
                pre->next=node;
                pre=node;
                            l1=l1->next;
           
            }
        }
        if(carry==1)
        {
            ListNode* node=new ListNode(0);
            node->val=1;
            pre->next=node;
        }
        return f->next;
    }
};
