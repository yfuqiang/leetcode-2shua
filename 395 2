class Solution {
public:
    int longestSubstring(string s, int k) {
        unordered_map<char, int> umap;
        for (auto c : s) umap[c]++;
        vector<int> split;
        for (int i = 0; i < s.size(); i++) {
            if (umap[s[i]] < k) split.push_back(i);
        }
        if (split.size() == 0) return s.length();
        int ans = 0, left= 0;
        split.push_back(s.length());
        for (int i = 0; i < split.size(); i++) {
            int len = split[i] - left;
            if (len > ans) ans = max(ans, longestSubstring(s.substr(left, len), k));
            left = split[i]+1;
        }
        return ans;
    }
};

